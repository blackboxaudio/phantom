name: phantom-dev

on:
  push:
    branches:
      - "**"
      - "!main"

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: "Preparation"
      uses: actions/checkout@v2

    - name: "1/6: Clone JUCE Repository"
      uses: actions/checkout@v2
      with:
        repository: juce-framework/JUCE
        path: ${{ runner.workspace }}/phantom/JUCE

    - name: "2/6: Configure JUCE"
      working-directory: ${{ runner.workspace }}/phantom/JUCE
      run: cmake -B bin

    - name: "3/6: Build JUCE"
      working-directory: ${{ runner.workspace }}/phantom/JUCE
      run: cmake --build bin
    
    - name: "4/6: Configure Phantom"
      working-directory: ${{ runner.workspace }}/phantom
      run: cmake -B bin

    - name: "5/6: Build Phantom"
      working-directory: ${{ runner.workspace }}/phantom
      run: cmake --build bin --config ${{env.BUILD_TYPE}} --target Phantom_All

    - name: "(Windows) 6/6: Upload VST3"
      uses: actions/upload-artifact@v2
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        name: phantom-win-vst3
        path: ${{ runner.workspace }}/phantom/bin/Phantom_artefacts/${{ env.BUILD_TYPE }}/VST3/Phantom.vst3/Contents/x86_64-win/Phantom.vst3

    - name: "(MacOS) 6-A/6: Upload VST3"
      uses: actions/upload-artifact@v2
      if: ${{ matrix.os == 'macos-latest' }}
      with:
        name: phantom-mac-vst3
        path: ${{ runner.workspace }}/phantom/bin/Phantom_artefacts/VST3
    
    - name: "(MacOS) 6-B/6: Upload AU"
      uses: actions/upload-artifact@v2
      if: ${{ matrix.os == 'macos-latest' }}
      with:
        name: phantom-mac-au
        path: ${{ runner.workspace }}/phantom/bin/Phantom_artefacts/AU

  upload:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: "Preparation"
      uses: actions/checkout@v2

    - name: "Retrieve Artifacts"
      uses: actions/download-artifact@v2
      with:
        path: ${{ runner.workspace }}/artifacts

    - name: "Move Artifacts"
      run: |
        mkdir ${{ runner.workspace }}/artifacts/phantom
        mkdir ${{ runner.workspace }}/artifacts/phantom/Windows
        mkdir ${{ runner.workspace }}/artifacts/phantom/MacOS
        mv ${{ runner.workspace }}/artifacts/phantom-win-vst3/Phantom.vst3 ${{ runner.workspace }}/artifacts/phantom/Windows/Phantom.vst3
        mv ${{ runner.workspace }}/artifacts/phantom-mac-vst3/Phantom.vst3 ${{ runner.workspace }}/artifacts/phantom/MacOS/Phantom.vst3
        mv ${{ runner.workspace }}/artifacts/phantom-mac-au/Phantom.component ${{ runner.workspace }}/artifacts/phantom/MacOS/Phantom.component

    - name: "Zip Artifacts"
      uses: papeloto/action-zip@v1
      with:
        files: ${{ runner.workspace }}/artifacts/phantom/
        dest: ${{ runner.workspace }}/artifacts/phantom.zip

    - name: "Check Zip"
      run: ls -R
      working-directory: ${{ runner.workspace }}/artifacts
